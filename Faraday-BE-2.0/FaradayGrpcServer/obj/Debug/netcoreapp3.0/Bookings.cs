// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Bookings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FaradayGrpcServer {

  /// <summary>Holder for reflection information generated from Protos/Bookings.proto</summary>
  public static partial class BookingsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/Bookings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BookingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvQm9va2luZ3MucHJvdG8SB0Jvb2tpbmciiAIKDEJvb2tpbmdN",
            "b2RlbBIKCgJpZBgBIAEoBRIvCg9waWNrdXBfbG9jYXRpb24YAiABKAsyFi5C",
            "b29raW5nLkxvY2F0aW9uTW9kZWwSMAoQZHJvcG9mZl9sb2NhdGlvbhgDIAEo",
            "CzIWLkJvb2tpbmcuTG9jYXRpb25Nb2RlbBIeCgNjYXIYBCABKAsyES5Cb29r",
            "aW5nLkNhck1vZGVsEigKCGN1c3RvbWVyGAUgASgLMhYuQm9va2luZy5DdXN0",
            "b21lck1vZGVsEhMKC3BpY2t1cF9kYXRlGAYgASgJEhQKDGRyb3BvZmZfZGF0",
            "ZRgHIAEoCRIUCgxpc19jYW5jZWxsZWQYCCABKAgiFwoJQm9va2luZ0lkEgoK",
            "AmlkGAEgASgFIvMBCghDYXJNb2RlbBIKCgJpZBgBIAEoBRINCgVicmFuZBgC",
            "IAEoCRINCgVtb2RlbBgDIAEoCRINCgVjb2xvchgEIAEoCRIRCglmdWVsX3R5",
            "cGUYBSABKAkSEAoIY2FyX3R5cGUYBiABKAkSDQoFZG9vcnMYByABKAUSFQoN",
            "bGljZW5zZV9wbGF0ZRgIIAEoCRIXCg9hbmltYWxzX2FsbG93ZWQYCSABKAgS",
            "DQoFcHJpY2UYCiABKAESEQoJYXZhaWxhYmxlGAsgASgIEigKCGxvY2F0aW9u",
            "GAwgASgLMhYuQm9va2luZy5Mb2NhdGlvbk1vZGVsIhMKBUNhcklkEgoKAmlk",
            "GAEgASgFImsKDUN1c3RvbWVyTW9kZWwSCgoCaWQYASABKAUSEgoKZmlyc3Rf",
            "bmFtZRgCIAEoCRIRCglsYXN0X25hbWUYAyABKAkSDgoGZ2VuZGVyGAQgASgJ",
            "EhcKD2RyaXZlcnNfbGljZW5zZRgFIAEoCSIYCgpDdXN0b21lcklkEgoKAmlk",
            "GAEgASgFIlwKDUxvY2F0aW9uTW9kZWwSCgoCaWQYASABKAUSDwoHYWRkcmVz",
            "cxgCIAEoCRIMCgRjaXR5GAMgASgJEg8KB3ppcGNvZGUYBCABKAkSDwoHY291",
            "bnRyeRgFIAEoCSIYCgpMb2NhdGlvbklkEgoKAmlkGAEgASgFIg4KDEVtcHR5",
            "UmVxdWVzdCIlCgxBZmZlY3RlZFJvd3MSFQoNYWZmZWN0ZWRfcm93cxgBIAEo",
            "BTLfBgoIQm9va2luZ3MSPAoPR2V0Qm9va2luZ01vZGVsEhIuQm9va2luZy5C",
            "b29raW5nSWQaFS5Cb29raW5nLkJvb2tpbmdNb2RlbBI/ChJDcmVhdGVCb29r",
            "aW5nTW9kZWwSFS5Cb29raW5nLkJvb2tpbmdNb2RlbBoSLkJvb2tpbmcuQm9v",
            "a2luZ0lkEkUKE0dldEFsbEJvb2tpbmdNb2RlbHMSFS5Cb29raW5nLkVtcHR5",
            "UmVxdWVzdBoVLkJvb2tpbmcuQm9va2luZ01vZGVsMAESSwoYR2V0Q3VzdG9t",
            "ZXJCb29raW5nTW9kZWxzEhYuQm9va2luZy5DdXN0b21lck1vZGVsGhUuQm9v",
            "a2luZy5Cb29raW5nTW9kZWwwARJCChJDYW5jZWxCb29raW5nTW9kZWwSFS5C",
            "b29raW5nLkJvb2tpbmdNb2RlbBoVLkJvb2tpbmcuQWZmZWN0ZWRSb3dzEjAK",
            "C0dldENhck1vZGVsEg4uQm9va2luZy5DYXJJZBoRLkJvb2tpbmcuQ2FyTW9k",
            "ZWwSMwoOQ3JlYXRlQ2FyTW9kZWwSES5Cb29raW5nLkNhck1vZGVsGg4uQm9v",
            "a2luZy5DYXJJZBI9Cg9HZXRBbGxDYXJNb2RlbHMSFS5Cb29raW5nLkVtcHR5",
            "UmVxdWVzdBoRLkJvb2tpbmcuQ2FyTW9kZWwwARI/ChBHZXRDdXN0b21lck1v",
            "ZGVsEhMuQm9va2luZy5DdXN0b21lcklkGhYuQm9va2luZy5DdXN0b21lck1v",
            "ZGVsEkIKE0NyZWF0ZUN1c3RvbWVyTW9kZWwSFi5Cb29raW5nLkN1c3RvbWVy",
            "TW9kZWwaEy5Cb29raW5nLkN1c3RvbWVySWQSRwoUR2V0QWxsQ3VzdG9tZXJN",
            "b2RlbHMSFS5Cb29raW5nLkVtcHR5UmVxdWVzdBoWLkJvb2tpbmcuQ3VzdG9t",
            "ZXJNb2RlbDABEj8KEEdldExvY2F0aW9uTW9kZWwSEy5Cb29raW5nLkxvY2F0",
            "aW9uSWQaFi5Cb29raW5nLkxvY2F0aW9uTW9kZWwSRwoUR2V0QWxsTG9jYXRp",
            "b25Nb2RlbHMSFS5Cb29raW5nLkVtcHR5UmVxdWVzdBoWLkJvb2tpbmcuTG9j",
            "YXRpb25Nb2RlbDABQhSqAhFGYXJhZGF5R3JwY1NlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.BookingModel), global::FaradayGrpcServer.BookingModel.Parser, new[]{ "Id", "PickupLocation", "DropoffLocation", "Car", "Customer", "PickupDate", "DropoffDate", "IsCancelled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.BookingId), global::FaradayGrpcServer.BookingId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.CarModel), global::FaradayGrpcServer.CarModel.Parser, new[]{ "Id", "Brand", "Model", "Color", "FuelType", "CarType", "Doors", "LicensePlate", "AnimalsAllowed", "Price", "Available", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.CarId), global::FaradayGrpcServer.CarId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.CustomerModel), global::FaradayGrpcServer.CustomerModel.Parser, new[]{ "Id", "FirstName", "LastName", "Gender", "DriversLicense" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.CustomerId), global::FaradayGrpcServer.CustomerId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.LocationModel), global::FaradayGrpcServer.LocationModel.Parser, new[]{ "Id", "Address", "City", "Zipcode", "Country" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.LocationId), global::FaradayGrpcServer.LocationId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.EmptyRequest), global::FaradayGrpcServer.EmptyRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaradayGrpcServer.AffectedRows), global::FaradayGrpcServer.AffectedRows.Parser, new[]{ "AffectedRows_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///Bookings
  /// </summary>
  public sealed partial class BookingModel : pb::IMessage<BookingModel> {
    private static readonly pb::MessageParser<BookingModel> _parser = new pb::MessageParser<BookingModel>(() => new BookingModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookingModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingModel(BookingModel other) : this() {
      id_ = other.id_;
      pickupLocation_ = other.pickupLocation_ != null ? other.pickupLocation_.Clone() : null;
      dropoffLocation_ = other.dropoffLocation_ != null ? other.dropoffLocation_.Clone() : null;
      car_ = other.car_ != null ? other.car_.Clone() : null;
      customer_ = other.customer_ != null ? other.customer_.Clone() : null;
      pickupDate_ = other.pickupDate_;
      dropoffDate_ = other.dropoffDate_;
      isCancelled_ = other.isCancelled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingModel Clone() {
      return new BookingModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pickup_location" field.</summary>
    public const int PickupLocationFieldNumber = 2;
    private global::FaradayGrpcServer.LocationModel pickupLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaradayGrpcServer.LocationModel PickupLocation {
      get { return pickupLocation_; }
      set {
        pickupLocation_ = value;
      }
    }

    /// <summary>Field number for the "dropoff_location" field.</summary>
    public const int DropoffLocationFieldNumber = 3;
    private global::FaradayGrpcServer.LocationModel dropoffLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaradayGrpcServer.LocationModel DropoffLocation {
      get { return dropoffLocation_; }
      set {
        dropoffLocation_ = value;
      }
    }

    /// <summary>Field number for the "car" field.</summary>
    public const int CarFieldNumber = 4;
    private global::FaradayGrpcServer.CarModel car_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaradayGrpcServer.CarModel Car {
      get { return car_; }
      set {
        car_ = value;
      }
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 5;
    private global::FaradayGrpcServer.CustomerModel customer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaradayGrpcServer.CustomerModel Customer {
      get { return customer_; }
      set {
        customer_ = value;
      }
    }

    /// <summary>Field number for the "pickup_date" field.</summary>
    public const int PickupDateFieldNumber = 6;
    private string pickupDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PickupDate {
      get { return pickupDate_; }
      set {
        pickupDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dropoff_date" field.</summary>
    public const int DropoffDateFieldNumber = 7;
    private string dropoffDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DropoffDate {
      get { return dropoffDate_; }
      set {
        dropoffDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_cancelled" field.</summary>
    public const int IsCancelledFieldNumber = 8;
    private bool isCancelled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCancelled {
      get { return isCancelled_; }
      set {
        isCancelled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookingModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookingModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(PickupLocation, other.PickupLocation)) return false;
      if (!object.Equals(DropoffLocation, other.DropoffLocation)) return false;
      if (!object.Equals(Car, other.Car)) return false;
      if (!object.Equals(Customer, other.Customer)) return false;
      if (PickupDate != other.PickupDate) return false;
      if (DropoffDate != other.DropoffDate) return false;
      if (IsCancelled != other.IsCancelled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (pickupLocation_ != null) hash ^= PickupLocation.GetHashCode();
      if (dropoffLocation_ != null) hash ^= DropoffLocation.GetHashCode();
      if (car_ != null) hash ^= Car.GetHashCode();
      if (customer_ != null) hash ^= Customer.GetHashCode();
      if (PickupDate.Length != 0) hash ^= PickupDate.GetHashCode();
      if (DropoffDate.Length != 0) hash ^= DropoffDate.GetHashCode();
      if (IsCancelled != false) hash ^= IsCancelled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pickupLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PickupLocation);
      }
      if (dropoffLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DropoffLocation);
      }
      if (car_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Car);
      }
      if (customer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Customer);
      }
      if (PickupDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PickupDate);
      }
      if (DropoffDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DropoffDate);
      }
      if (IsCancelled != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsCancelled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (pickupLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PickupLocation);
      }
      if (dropoffLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DropoffLocation);
      }
      if (car_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Car);
      }
      if (customer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customer);
      }
      if (PickupDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PickupDate);
      }
      if (DropoffDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DropoffDate);
      }
      if (IsCancelled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookingModel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.pickupLocation_ != null) {
        if (pickupLocation_ == null) {
          PickupLocation = new global::FaradayGrpcServer.LocationModel();
        }
        PickupLocation.MergeFrom(other.PickupLocation);
      }
      if (other.dropoffLocation_ != null) {
        if (dropoffLocation_ == null) {
          DropoffLocation = new global::FaradayGrpcServer.LocationModel();
        }
        DropoffLocation.MergeFrom(other.DropoffLocation);
      }
      if (other.car_ != null) {
        if (car_ == null) {
          Car = new global::FaradayGrpcServer.CarModel();
        }
        Car.MergeFrom(other.Car);
      }
      if (other.customer_ != null) {
        if (customer_ == null) {
          Customer = new global::FaradayGrpcServer.CustomerModel();
        }
        Customer.MergeFrom(other.Customer);
      }
      if (other.PickupDate.Length != 0) {
        PickupDate = other.PickupDate;
      }
      if (other.DropoffDate.Length != 0) {
        DropoffDate = other.DropoffDate;
      }
      if (other.IsCancelled != false) {
        IsCancelled = other.IsCancelled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pickupLocation_ == null) {
              PickupLocation = new global::FaradayGrpcServer.LocationModel();
            }
            input.ReadMessage(PickupLocation);
            break;
          }
          case 26: {
            if (dropoffLocation_ == null) {
              DropoffLocation = new global::FaradayGrpcServer.LocationModel();
            }
            input.ReadMessage(DropoffLocation);
            break;
          }
          case 34: {
            if (car_ == null) {
              Car = new global::FaradayGrpcServer.CarModel();
            }
            input.ReadMessage(Car);
            break;
          }
          case 42: {
            if (customer_ == null) {
              Customer = new global::FaradayGrpcServer.CustomerModel();
            }
            input.ReadMessage(Customer);
            break;
          }
          case 50: {
            PickupDate = input.ReadString();
            break;
          }
          case 58: {
            DropoffDate = input.ReadString();
            break;
          }
          case 64: {
            IsCancelled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BookingId : pb::IMessage<BookingId> {
    private static readonly pb::MessageParser<BookingId> _parser = new pb::MessageParser<BookingId>(() => new BookingId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookingId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingId(BookingId other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingId Clone() {
      return new BookingId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookingId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookingId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookingId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Cars
  /// </summary>
  public sealed partial class CarModel : pb::IMessage<CarModel> {
    private static readonly pb::MessageParser<CarModel> _parser = new pb::MessageParser<CarModel>(() => new CarModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarModel(CarModel other) : this() {
      id_ = other.id_;
      brand_ = other.brand_;
      model_ = other.model_;
      color_ = other.color_;
      fuelType_ = other.fuelType_;
      carType_ = other.carType_;
      doors_ = other.doors_;
      licensePlate_ = other.licensePlate_;
      animalsAllowed_ = other.animalsAllowed_;
      price_ = other.price_;
      available_ = other.available_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarModel Clone() {
      return new CarModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 2;
    private string brand_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brand {
      get { return brand_; }
      set {
        brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fuel_type" field.</summary>
    public const int FuelTypeFieldNumber = 5;
    private string fuelType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FuelType {
      get { return fuelType_; }
      set {
        fuelType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "car_type" field.</summary>
    public const int CarTypeFieldNumber = 6;
    private string carType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarType {
      get { return carType_; }
      set {
        carType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doors" field.</summary>
    public const int DoorsFieldNumber = 7;
    private int doors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Doors {
      get { return doors_; }
      set {
        doors_ = value;
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 8;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "animals_allowed" field.</summary>
    public const int AnimalsAllowedFieldNumber = 9;
    private bool animalsAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AnimalsAllowed {
      get { return animalsAllowed_; }
      set {
        animalsAllowed_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 10;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 11;
    private bool available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 12;
    private global::FaradayGrpcServer.LocationModel location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaradayGrpcServer.LocationModel Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Brand != other.Brand) return false;
      if (Model != other.Model) return false;
      if (Color != other.Color) return false;
      if (FuelType != other.FuelType) return false;
      if (CarType != other.CarType) return false;
      if (Doors != other.Doors) return false;
      if (LicensePlate != other.LicensePlate) return false;
      if (AnimalsAllowed != other.AnimalsAllowed) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (Available != other.Available) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Brand.Length != 0) hash ^= Brand.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (FuelType.Length != 0) hash ^= FuelType.GetHashCode();
      if (CarType.Length != 0) hash ^= CarType.GetHashCode();
      if (Doors != 0) hash ^= Doors.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (AnimalsAllowed != false) hash ^= AnimalsAllowed.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Available != false) hash ^= Available.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Brand.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Brand);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Color);
      }
      if (FuelType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FuelType);
      }
      if (CarType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CarType);
      }
      if (Doors != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Doors);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LicensePlate);
      }
      if (AnimalsAllowed != false) {
        output.WriteRawTag(72);
        output.WriteBool(AnimalsAllowed);
      }
      if (Price != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Price);
      }
      if (Available != false) {
        output.WriteRawTag(88);
        output.WriteBool(Available);
      }
      if (location_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Brand.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brand);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (FuelType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FuelType);
      }
      if (CarType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarType);
      }
      if (Doors != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Doors);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (AnimalsAllowed != false) {
        size += 1 + 1;
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Available != false) {
        size += 1 + 1;
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarModel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Brand.Length != 0) {
        Brand = other.Brand;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.FuelType.Length != 0) {
        FuelType = other.FuelType;
      }
      if (other.CarType.Length != 0) {
        CarType = other.CarType;
      }
      if (other.Doors != 0) {
        Doors = other.Doors;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      if (other.AnimalsAllowed != false) {
        AnimalsAllowed = other.AnimalsAllowed;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Available != false) {
        Available = other.Available;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::FaradayGrpcServer.LocationModel();
        }
        Location.MergeFrom(other.Location);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Brand = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            Color = input.ReadString();
            break;
          }
          case 42: {
            FuelType = input.ReadString();
            break;
          }
          case 50: {
            CarType = input.ReadString();
            break;
          }
          case 56: {
            Doors = input.ReadInt32();
            break;
          }
          case 66: {
            LicensePlate = input.ReadString();
            break;
          }
          case 72: {
            AnimalsAllowed = input.ReadBool();
            break;
          }
          case 81: {
            Price = input.ReadDouble();
            break;
          }
          case 88: {
            Available = input.ReadBool();
            break;
          }
          case 98: {
            if (location_ == null) {
              Location = new global::FaradayGrpcServer.LocationModel();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarId : pb::IMessage<CarId> {
    private static readonly pb::MessageParser<CarId> _parser = new pb::MessageParser<CarId>(() => new CarId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarId(CarId other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarId Clone() {
      return new CarId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Customers
  /// </summary>
  public sealed partial class CustomerModel : pb::IMessage<CustomerModel> {
    private static readonly pb::MessageParser<CustomerModel> _parser = new pb::MessageParser<CustomerModel>(() => new CustomerModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerModel(CustomerModel other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      gender_ = other.gender_;
      driversLicense_ = other.driversLicense_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerModel Clone() {
      return new CustomerModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 4;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drivers_license" field.</summary>
    public const int DriversLicenseFieldNumber = 5;
    private string driversLicense_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DriversLicense {
      get { return driversLicense_; }
      set {
        driversLicense_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Gender != other.Gender) return false;
      if (DriversLicense != other.DriversLicense) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (DriversLicense.Length != 0) hash ^= DriversLicense.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Gender);
      }
      if (DriversLicense.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DriversLicense);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (DriversLicense.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriversLicense);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerModel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.DriversLicense.Length != 0) {
        DriversLicense = other.DriversLicense;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            Gender = input.ReadString();
            break;
          }
          case 42: {
            DriversLicense = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerId : pb::IMessage<CustomerId> {
    private static readonly pb::MessageParser<CustomerId> _parser = new pb::MessageParser<CustomerId>(() => new CustomerId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerId(CustomerId other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerId Clone() {
      return new CustomerId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Locations
  /// </summary>
  public sealed partial class LocationModel : pb::IMessage<LocationModel> {
    private static readonly pb::MessageParser<LocationModel> _parser = new pb::MessageParser<LocationModel>(() => new LocationModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationModel(LocationModel other) : this() {
      id_ = other.id_;
      address_ = other.address_;
      city_ = other.city_;
      zipcode_ = other.zipcode_;
      country_ = other.country_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationModel Clone() {
      return new LocationModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 3;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zipcode" field.</summary>
    public const int ZipcodeFieldNumber = 4;
    private string zipcode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zipcode {
      get { return zipcode_; }
      set {
        zipcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 5;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Address != other.Address) return false;
      if (City != other.City) return false;
      if (Zipcode != other.Zipcode) return false;
      if (Country != other.Country) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Zipcode.Length != 0) hash ^= Zipcode.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (City.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(City);
      }
      if (Zipcode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Zipcode);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Country);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Zipcode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zipcode);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationModel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Zipcode.Length != 0) {
        Zipcode = other.Zipcode;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 26: {
            City = input.ReadString();
            break;
          }
          case 34: {
            Zipcode = input.ReadString();
            break;
          }
          case 42: {
            Country = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationId : pb::IMessage<LocationId> {
    private static readonly pb::MessageParser<LocationId> _parser = new pb::MessageParser<LocationId>(() => new LocationId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationId(LocationId other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationId Clone() {
      return new LocationId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Other
  /// </summary>
  public sealed partial class EmptyRequest : pb::IMessage<EmptyRequest> {
    private static readonly pb::MessageParser<EmptyRequest> _parser = new pb::MessageParser<EmptyRequest>(() => new EmptyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyRequest(EmptyRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyRequest Clone() {
      return new EmptyRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AffectedRows : pb::IMessage<AffectedRows> {
    private static readonly pb::MessageParser<AffectedRows> _parser = new pb::MessageParser<AffectedRows>(() => new AffectedRows());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AffectedRows> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AffectedRows() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AffectedRows(AffectedRows other) : this() {
      affectedRows_ = other.affectedRows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AffectedRows Clone() {
      return new AffectedRows(this);
    }

    /// <summary>Field number for the "affected_rows" field.</summary>
    public const int AffectedRows_FieldNumber = 1;
    private int affectedRows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AffectedRows_ {
      get { return affectedRows_; }
      set {
        affectedRows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AffectedRows);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AffectedRows other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AffectedRows_ != other.AffectedRows_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AffectedRows_ != 0) hash ^= AffectedRows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AffectedRows_ != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AffectedRows_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AffectedRows_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AffectedRows_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AffectedRows other) {
      if (other == null) {
        return;
      }
      if (other.AffectedRows_ != 0) {
        AffectedRows_ = other.AffectedRows_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AffectedRows_ = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
