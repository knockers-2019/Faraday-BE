// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Bookings.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace FaradayGrpcServer {
  public static partial class Bookings
  {
    static readonly string __ServiceName = "Booking.Bookings";

    static readonly grpc::Marshaller<global::FaradayGrpcServer.BookingId> __Marshaller_Booking_BookingId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.BookingId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.BookingModel> __Marshaller_Booking_BookingModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.BookingModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.EmptyRequest> __Marshaller_Booking_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.EmptyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.CustomerModel> __Marshaller_Booking_CustomerModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.CustomerModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.AffectedRows> __Marshaller_Booking_AffectedRows = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.AffectedRows.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.CarId> __Marshaller_Booking_CarId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.CarId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.CarModel> __Marshaller_Booking_CarModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.CarModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.CustomerId> __Marshaller_Booking_CustomerId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.CustomerId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.LocationId> __Marshaller_Booking_LocationId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.LocationId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FaradayGrpcServer.LocationModel> __Marshaller_Booking_LocationModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FaradayGrpcServer.LocationModel.Parser.ParseFrom);

    static readonly grpc::Method<global::FaradayGrpcServer.BookingId, global::FaradayGrpcServer.BookingModel> __Method_GetBookingModel = new grpc::Method<global::FaradayGrpcServer.BookingId, global::FaradayGrpcServer.BookingModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBookingModel",
        __Marshaller_Booking_BookingId,
        __Marshaller_Booking_BookingModel);

    static readonly grpc::Method<global::FaradayGrpcServer.BookingModel, global::FaradayGrpcServer.BookingId> __Method_CreateBookingModel = new grpc::Method<global::FaradayGrpcServer.BookingModel, global::FaradayGrpcServer.BookingId>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBookingModel",
        __Marshaller_Booking_BookingModel,
        __Marshaller_Booking_BookingId);

    static readonly grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.BookingModel> __Method_GetAllBookingModels = new grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.BookingModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllBookingModels",
        __Marshaller_Booking_EmptyRequest,
        __Marshaller_Booking_BookingModel);

    static readonly grpc::Method<global::FaradayGrpcServer.CustomerModel, global::FaradayGrpcServer.BookingModel> __Method_GetCustomerBookingModels = new grpc::Method<global::FaradayGrpcServer.CustomerModel, global::FaradayGrpcServer.BookingModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetCustomerBookingModels",
        __Marshaller_Booking_CustomerModel,
        __Marshaller_Booking_BookingModel);

    static readonly grpc::Method<global::FaradayGrpcServer.BookingModel, global::FaradayGrpcServer.AffectedRows> __Method_CancelBookingModel = new grpc::Method<global::FaradayGrpcServer.BookingModel, global::FaradayGrpcServer.AffectedRows>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelBookingModel",
        __Marshaller_Booking_BookingModel,
        __Marshaller_Booking_AffectedRows);

    static readonly grpc::Method<global::FaradayGrpcServer.CarId, global::FaradayGrpcServer.CarModel> __Method_GetCarModel = new grpc::Method<global::FaradayGrpcServer.CarId, global::FaradayGrpcServer.CarModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCarModel",
        __Marshaller_Booking_CarId,
        __Marshaller_Booking_CarModel);

    static readonly grpc::Method<global::FaradayGrpcServer.CarModel, global::FaradayGrpcServer.CarId> __Method_CreateCarModel = new grpc::Method<global::FaradayGrpcServer.CarModel, global::FaradayGrpcServer.CarId>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCarModel",
        __Marshaller_Booking_CarModel,
        __Marshaller_Booking_CarId);

    static readonly grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.CarModel> __Method_GetAllCarModels = new grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.CarModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllCarModels",
        __Marshaller_Booking_EmptyRequest,
        __Marshaller_Booking_CarModel);

    static readonly grpc::Method<global::FaradayGrpcServer.CustomerId, global::FaradayGrpcServer.CustomerModel> __Method_GetCustomerModel = new grpc::Method<global::FaradayGrpcServer.CustomerId, global::FaradayGrpcServer.CustomerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomerModel",
        __Marshaller_Booking_CustomerId,
        __Marshaller_Booking_CustomerModel);

    static readonly grpc::Method<global::FaradayGrpcServer.CustomerModel, global::FaradayGrpcServer.CustomerId> __Method_CreateCustomerModel = new grpc::Method<global::FaradayGrpcServer.CustomerModel, global::FaradayGrpcServer.CustomerId>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomerModel",
        __Marshaller_Booking_CustomerModel,
        __Marshaller_Booking_CustomerId);

    static readonly grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.CustomerModel> __Method_GetAllCustomerModels = new grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.CustomerModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllCustomerModels",
        __Marshaller_Booking_EmptyRequest,
        __Marshaller_Booking_CustomerModel);

    static readonly grpc::Method<global::FaradayGrpcServer.LocationId, global::FaradayGrpcServer.LocationModel> __Method_GetLocationModel = new grpc::Method<global::FaradayGrpcServer.LocationId, global::FaradayGrpcServer.LocationModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocationModel",
        __Marshaller_Booking_LocationId,
        __Marshaller_Booking_LocationModel);

    static readonly grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.LocationModel> __Method_GetAllLocationModels = new grpc::Method<global::FaradayGrpcServer.EmptyRequest, global::FaradayGrpcServer.LocationModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllLocationModels",
        __Marshaller_Booking_EmptyRequest,
        __Marshaller_Booking_LocationModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::FaradayGrpcServer.BookingsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Bookings</summary>
    public partial class BookingsClient : grpc::ClientBase<BookingsClient>
    {
      /// <summary>Creates a new client for Bookings</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BookingsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Bookings that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BookingsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BookingsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BookingsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///Bookings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.BookingModel GetBookingModel(global::FaradayGrpcServer.BookingId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBookingModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Bookings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.BookingModel GetBookingModel(global::FaradayGrpcServer.BookingId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBookingModel, null, options, request);
      }
      /// <summary>
      ///Bookings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.BookingModel> GetBookingModelAsync(global::FaradayGrpcServer.BookingId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBookingModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Bookings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.BookingModel> GetBookingModelAsync(global::FaradayGrpcServer.BookingId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBookingModel, null, options, request);
      }
      public virtual global::FaradayGrpcServer.BookingId CreateBookingModel(global::FaradayGrpcServer.BookingModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookingModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FaradayGrpcServer.BookingId CreateBookingModel(global::FaradayGrpcServer.BookingModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBookingModel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.BookingId> CreateBookingModelAsync(global::FaradayGrpcServer.BookingModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookingModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.BookingId> CreateBookingModelAsync(global::FaradayGrpcServer.BookingModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBookingModel, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.BookingModel> GetAllBookingModels(global::FaradayGrpcServer.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllBookingModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.BookingModel> GetAllBookingModels(global::FaradayGrpcServer.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllBookingModels, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.BookingModel> GetCustomerBookingModels(global::FaradayGrpcServer.CustomerModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerBookingModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.BookingModel> GetCustomerBookingModels(global::FaradayGrpcServer.CustomerModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetCustomerBookingModels, null, options, request);
      }
      public virtual global::FaradayGrpcServer.AffectedRows CancelBookingModel(global::FaradayGrpcServer.BookingModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBookingModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FaradayGrpcServer.AffectedRows CancelBookingModel(global::FaradayGrpcServer.BookingModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelBookingModel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.AffectedRows> CancelBookingModelAsync(global::FaradayGrpcServer.BookingModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBookingModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.AffectedRows> CancelBookingModelAsync(global::FaradayGrpcServer.BookingModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelBookingModel, null, options, request);
      }
      /// <summary>
      ///Cars
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.CarModel GetCarModel(global::FaradayGrpcServer.CarId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCarModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Cars
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.CarModel GetCarModel(global::FaradayGrpcServer.CarId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCarModel, null, options, request);
      }
      /// <summary>
      ///Cars
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CarModel> GetCarModelAsync(global::FaradayGrpcServer.CarId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCarModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Cars
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CarModel> GetCarModelAsync(global::FaradayGrpcServer.CarId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCarModel, null, options, request);
      }
      public virtual global::FaradayGrpcServer.CarId CreateCarModel(global::FaradayGrpcServer.CarModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCarModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FaradayGrpcServer.CarId CreateCarModel(global::FaradayGrpcServer.CarModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCarModel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CarId> CreateCarModelAsync(global::FaradayGrpcServer.CarModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCarModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CarId> CreateCarModelAsync(global::FaradayGrpcServer.CarModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCarModel, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.CarModel> GetAllCarModels(global::FaradayGrpcServer.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCarModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.CarModel> GetAllCarModels(global::FaradayGrpcServer.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllCarModels, null, options, request);
      }
      /// <summary>
      ///Customers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.CustomerModel GetCustomerModel(global::FaradayGrpcServer.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Customers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.CustomerModel GetCustomerModel(global::FaradayGrpcServer.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomerModel, null, options, request);
      }
      /// <summary>
      ///Customers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CustomerModel> GetCustomerModelAsync(global::FaradayGrpcServer.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Customers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CustomerModel> GetCustomerModelAsync(global::FaradayGrpcServer.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomerModel, null, options, request);
      }
      public virtual global::FaradayGrpcServer.CustomerId CreateCustomerModel(global::FaradayGrpcServer.CustomerModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FaradayGrpcServer.CustomerId CreateCustomerModel(global::FaradayGrpcServer.CustomerModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomerModel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CustomerId> CreateCustomerModelAsync(global::FaradayGrpcServer.CustomerModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.CustomerId> CreateCustomerModelAsync(global::FaradayGrpcServer.CustomerModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomerModel, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.CustomerModel> GetAllCustomerModels(global::FaradayGrpcServer.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCustomerModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.CustomerModel> GetAllCustomerModels(global::FaradayGrpcServer.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllCustomerModels, null, options, request);
      }
      /// <summary>
      ///Locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.LocationModel GetLocationModel(global::FaradayGrpcServer.LocationId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::FaradayGrpcServer.LocationModel GetLocationModel(global::FaradayGrpcServer.LocationId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLocationModel, null, options, request);
      }
      /// <summary>
      ///Locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.LocationModel> GetLocationModelAsync(global::FaradayGrpcServer.LocationId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLocationModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Locations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::FaradayGrpcServer.LocationModel> GetLocationModelAsync(global::FaradayGrpcServer.LocationId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLocationModel, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.LocationModel> GetAllLocationModels(global::FaradayGrpcServer.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllLocationModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FaradayGrpcServer.LocationModel> GetAllLocationModels(global::FaradayGrpcServer.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllLocationModels, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BookingsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BookingsClient(configuration);
      }
    }

  }
}
#endregion
